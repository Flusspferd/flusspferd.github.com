if (!window.PDoc) window.PDoc = {};
PDoc.elements = {
  'JSON': { 'name': 'JSON', 'type': 'namespace', 'path': '../language/json.html' },
'JSON.parse': { 'name': 'JSON.parse', 'type': 'class method', 'path': '../language/json.html#parse-class_method' },
'JSON.stringify': { 'name': 'JSON.stringify', 'type': 'class method', 'path': '../language/json.html#stringify-class_method' },
'CommonJS Core section': { 'name': 'CommonJS Core section', 'type': 'section', 'path': '../commonjs_core_section.html' },
'Flusspferd Core section': { 'name': 'Flusspferd Core section', 'type': 'section', 'path': '../flusspferd_core_section.html' },
'Language section': { 'name': 'Language section', 'type': 'section', 'path': '../language_section.html' },
'Bundled Modules section': { 'name': 'Bundled Modules section', 'type': 'section', 'path': '../bundled_modules_section.html' },
'Function': { 'name': 'Function', 'type': 'namespace', 'path': '../language/function.html' },
'system': { 'name': 'system', 'type': 'namespace', 'path': '../commonjs core/system.html' },
'system.args': { 'name': 'system.args', 'type': 'class property', 'path': '../commonjs core/system.html#args-class_property' },
'system.env': { 'name': 'system.env', 'type': 'class property', 'path': '../commonjs core/system.html#env-class_property' },
'system.stdin': { 'name': 'system.stdin', 'type': 'class property', 'path': '../commonjs core/system.html#stdin-class_property' },
'system.stdout': { 'name': 'system.stdout', 'type': 'class property', 'path': '../commonjs core/system.html#stdout-class_property' },
'system.stderr': { 'name': 'system.stderr', 'type': 'class property', 'path': '../commonjs core/system.html#stderr-class_property' },
'system.platform': { 'name': 'system.platform', 'type': 'class property', 'path': '../commonjs core/system.html#platform-class_property' },
'$require': { 'name': '$require', 'type': 'utility', 'path': '../commonjs core/dollarrequire.html' },
'require': { 'name': 'require', 'type': 'namespace', 'path': '../commonjs core/require.html' },
'require#id': { 'name': 'require#id', 'type': 'instance property', 'path': '../commonjs core/require.html#id-instance_property' },
'require.paths': { 'name': 'require.paths', 'type': 'class property', 'path': '../commonjs core/require.html#paths-class_property' },
'require.module_cache': { 'name': 'require.module_cache', 'type': 'class property', 'path': '../commonjs core/require.html#module_cache-class_property' },
'require.preload': { 'name': 'require.preload', 'type': 'class property', 'path': '../commonjs core/require.html#preload-class_property' },
'require.alias': { 'name': 'require.alias', 'type': 'class property', 'path': '../commonjs core/require.html#alias-class_property' },
'module': { 'name': 'module', 'type': 'namespace', 'path': '../commonjs core/module.html' },
'module#id': { 'name': 'module#id', 'type': 'instance property', 'path': '../commonjs core/module.html#id-instance_property' },
'module#uri': { 'name': 'module#uri', 'type': 'instance property', 'path': '../commonjs core/module.html#uri-instance_property' },
'module#resource': { 'name': 'module#resource', 'type': 'instance method', 'path': '../commonjs core/module.html#resource-instance_method' },
'getopt': { 'name': 'getopt', 'type': 'namespace', 'path': '../flusspferd core/getopt.html' },
'getopt.getopt': { 'name': 'getopt.getopt', 'type': 'class method', 'path': '../flusspferd core/getopt.html#getopt-class_method' },
'getopt.getopt_help': { 'name': 'getopt.getopt_help', 'type': 'class method', 'path': '../flusspferd core/getopt.html#getopt_help-class_method' },
'getopt.getopt_man': { 'name': 'getopt.getopt_man', 'type': 'class method', 'path': '../flusspferd core/getopt.html#getopt_man-class_method' },
'getopt.getopt_bash': { 'name': 'getopt.getopt_bash', 'type': 'class method', 'path': '../flusspferd core/getopt.html#getopt_bash-class_method' },
'encodings': { 'name': 'encodings', 'type': 'namespace', 'path': '../commonjs core/encodings.html' },
'encodings.convertToString': { 'name': 'encodings.convertToString', 'type': 'class method', 'path': '../commonjs core/encodings.html#converttostring-class_method' },
'encodings.convertFromString': { 'name': 'encodings.convertFromString', 'type': 'class method', 'path': '../commonjs core/encodings.html#convertfromstring-class_method' },
'encodings.convert': { 'name': 'encodings.convert', 'type': 'class method', 'path': '../commonjs core/encodings.html#convert-class_method' },
'encodings.Transcoder': { 'name': 'encodings.Transcoder', 'type': 'class', 'path': '../commonjs core/encodings/transcoder.html' },
'new encodings.Transcoder': { 'name': 'new encodings.Transcoder', 'type': 'constructor', 'path': '../commonjs core/encodings/transcoder.html#new-constructor' },
'encodings.Transcoder#sourceCharset': { 'name': 'encodings.Transcoder#sourceCharset', 'type': 'instance property', 'path': '../commonjs core/encodings/transcoder.html#sourcecharset-instance_property' },
'encodings.Transcoder#destinationCharset': { 'name': 'encodings.Transcoder#destinationCharset', 'type': 'instance property', 'path': '../commonjs core/encodings/transcoder.html#destinationcharset-instance_property' },
'encodings.Transcoder#push': { 'name': 'encodings.Transcoder#push', 'type': 'instance method', 'path': '../commonjs core/encodings/transcoder.html#push-instance_method' },
'encodings.Transcoder#pushAccumulate': { 'name': 'encodings.Transcoder#pushAccumulate', 'type': 'instance method', 'path': '../commonjs core/encodings/transcoder.html#pushaccumulate-instance_method' },
'encodings.Transcoder#close': { 'name': 'encodings.Transcoder#close', 'type': 'instance method', 'path': '../commonjs core/encodings/transcoder.html#close-instance_method' },
'binary': { 'name': 'binary', 'type': 'namespace', 'path': '../commonjs core/binary.html' },
'binary.Binary': { 'name': 'binary.Binary', 'type': 'mixin', 'path': '../commonjs core/binary/binary.html' },
'binary.Binary.range': { 'name': 'binary.Binary.range', 'type': 'class method', 'path': '../commonjs core/binary/binary.html#range-class_method' },
'binary.Binary.lengthRange': { 'name': 'binary.Binary.lengthRange', 'type': 'class method', 'path': '../commonjs core/binary/binary.html#lengthrange-class_method' },
'binary.Binary#toByteArray': { 'name': 'binary.Binary#toByteArray', 'type': 'instance method', 'path': '../commonjs core/binary/binary.html#tobytearray-instance_method' },
'binary.Binary#toByteString': { 'name': 'binary.Binary#toByteString', 'type': 'instance method', 'path': '../commonjs core/binary/binary.html#tobytestring-instance_method' },
'binary.Binary#toArray': { 'name': 'binary.Binary#toArray', 'type': 'instance method', 'path': '../commonjs core/binary/binary.html#toarray-instance_method' },
'binary.Binary#indexOf': { 'name': 'binary.Binary#indexOf', 'type': 'instance method', 'path': '../commonjs core/binary/binary.html#indexof-instance_method' },
'binary.Binary#lastIndexOf': { 'name': 'binary.Binary#lastIndexOf', 'type': 'instance method', 'path': '../commonjs core/binary/binary.html#lastindexof-instance_method' },
'binary.Binary#charAt': { 'name': 'binary.Binary#charAt', 'type': 'instance method', 'path': '../commonjs core/binary/binary.html#charat-instance_method' },
'binary.Binary#byteAt': { 'name': 'binary.Binary#byteAt', 'type': 'instance method', 'path': '../commonjs core/binary/binary.html#byteat-instance_method' },
'binary.Binary#get': { 'name': 'binary.Binary#get', 'type': 'instance method', 'path': '../commonjs core/binary/binary.html#get-instance_method' },
'binary.Binary#slice': { 'name': 'binary.Binary#slice', 'type': 'instance method', 'path': '../commonjs core/binary/binary.html#slice-instance_method' },
'binary.Binary#split': { 'name': 'binary.Binary#split', 'type': 'instance method', 'path': '../commonjs core/binary/binary.html#split-instance_method' },
'binary.Binary#concat': { 'name': 'binary.Binary#concat', 'type': 'instance method', 'path': '../commonjs core/binary/binary.html#concat-instance_method' },
'binary.Binary#decodeToString': { 'name': 'binary.Binary#decodeToString', 'type': 'instance method', 'path': '../commonjs core/binary/binary.html#decodetostring-instance_method' },
'binary.ByteString': { 'name': 'binary.ByteString', 'type': 'class', 'path': '../commonjs core/binary/bytestring.html' },
'binary.ByteString.join': { 'name': 'binary.ByteString.join', 'type': 'class method', 'path': '../commonjs core/binary/bytestring.html#join-class_method' },
'new binary.ByteString': { 'name': 'new binary.ByteString', 'type': 'constructor', 'path': '../commonjs core/binary/bytestring.html#new-constructor' },
'binary.ByteString#charCodeAt': { 'name': 'binary.ByteString#charCodeAt', 'type': 'instance method', 'path': '../commonjs core/binary/bytestring.html#charcodeat-instance_method' },
'binary.ByteString#substr': { 'name': 'binary.ByteString#substr', 'type': 'instance method', 'path': '../commonjs core/binary/bytestring.html#substr-instance_method' },
'binary.ByteString#substring': { 'name': 'binary.ByteString#substring', 'type': 'instance method', 'path': '../commonjs core/binary/bytestring.html#substring-instance_method' },
'binary.ByteString#length': { 'name': 'binary.ByteString#length', 'type': 'instance property', 'path': '../commonjs core/binary/bytestring.html#length-instance_property' },
'binary.ByteArray': { 'name': 'binary.ByteArray', 'type': 'class', 'path': '../commonjs core/binary/bytearray.html' },
'new binary.ByteArray': { 'name': 'new binary.ByteArray', 'type': 'constructor', 'path': '../commonjs core/binary/bytearray.html#new-constructor' },
'binary.ByteArray#append': { 'name': 'binary.ByteArray#append', 'type': 'instance method', 'path': '../commonjs core/binary/bytearray.html#append-instance_method' },
'binary.ByteArray#push': { 'name': 'binary.ByteArray#push', 'type': 'instance method', 'path': '../commonjs core/binary/bytearray.html#push-instance_method' },
'binary.ByteArray#pop': { 'name': 'binary.ByteArray#pop', 'type': 'instance method', 'path': '../commonjs core/binary/bytearray.html#pop-instance_method' },
'binary.ByteArray#prepend': { 'name': 'binary.ByteArray#prepend', 'type': 'instance method', 'path': '../commonjs core/binary/bytearray.html#prepend-instance_method' },
'binary.ByteArray#unshift': { 'name': 'binary.ByteArray#unshift', 'type': 'instance method', 'path': '../commonjs core/binary/bytearray.html#unshift-instance_method' },
'binary.ByteArray#shift': { 'name': 'binary.ByteArray#shift', 'type': 'instance method', 'path': '../commonjs core/binary/bytearray.html#shift-instance_method' },
'binary.ByteArray#reverse': { 'name': 'binary.ByteArray#reverse', 'type': 'instance method', 'path': '../commonjs core/binary/bytearray.html#reverse-instance_method' },
'binary.ByteArray#sort': { 'name': 'binary.ByteArray#sort', 'type': 'instance method', 'path': '../commonjs core/binary/bytearray.html#sort-instance_method' },
'binary.ByteArray#erase': { 'name': 'binary.ByteArray#erase', 'type': 'instance method', 'path': '../commonjs core/binary/bytearray.html#erase-instance_method' },
'binary.ByteArray#displace': { 'name': 'binary.ByteArray#displace', 'type': 'instance method', 'path': '../commonjs core/binary/bytearray.html#displace-instance_method' },
'binary.ByteArray#insert': { 'name': 'binary.ByteArray#insert', 'type': 'instance method', 'path': '../commonjs core/binary/bytearray.html#insert-instance_method' },
'binary.ByteArray#splice': { 'name': 'binary.ByteArray#splice', 'type': 'instance method', 'path': '../commonjs core/binary/bytearray.html#splice-instance_method' },
'binary.ByteArray#filter': { 'name': 'binary.ByteArray#filter', 'type': 'instance method', 'path': '../commonjs core/binary/bytearray.html#filter-instance_method' },
'binary.ByteArray#forEach': { 'name': 'binary.ByteArray#forEach', 'type': 'instance method', 'path': '../commonjs core/binary/bytearray.html#foreach-instance_method' },
'binary.ByteArray#every': { 'name': 'binary.ByteArray#every', 'type': 'instance method', 'path': '../commonjs core/binary/bytearray.html#every-instance_method' },
'binary.ByteArray#some': { 'name': 'binary.ByteArray#some', 'type': 'instance method', 'path': '../commonjs core/binary/bytearray.html#some-instance_method' },
'binary.ByteArray#count': { 'name': 'binary.ByteArray#count', 'type': 'instance method', 'path': '../commonjs core/binary/bytearray.html#count-instance_method' },
'binary.ByteArray#map': { 'name': 'binary.ByteArray#map', 'type': 'instance method', 'path': '../commonjs core/binary/bytearray.html#map-instance_method' },
'binary.ByteArray#reduce': { 'name': 'binary.ByteArray#reduce', 'type': 'instance method', 'path': '../commonjs core/binary/bytearray.html#reduce-instance_method' },
'binary.ByteArray#reduceRight': { 'name': 'binary.ByteArray#reduceRight', 'type': 'instance method', 'path': '../commonjs core/binary/bytearray.html#reduceright-instance_method' },
'flusspferd': { 'name': 'flusspferd', 'type': 'namespace', 'path': '../flusspferd core/flusspferd.html' },
'flusspferd.version': { 'name': 'flusspferd.version', 'type': 'class property', 'path': '../flusspferd core/flusspferd.html#version-class_property' },
'flusspferd.relocatable': { 'name': 'flusspferd.relocatable', 'type': 'class property', 'path': '../flusspferd core/flusspferd.html#relocatable-class_property' },
'flusspferd.installPrefix': { 'name': 'flusspferd.installPrefix', 'type': 'class property', 'path': '../flusspferd core/flusspferd.html#installprefix-class_property' },
'flusspferd.configuredIstallPrefix': { 'name': 'flusspferd.configuredIstallPrefix', 'type': 'class property', 'path': '../flusspferd core/flusspferd.html#configuredistallprefix-class_property' },
'flusspferd.executableName': { 'name': 'flusspferd.executableName', 'type': 'class property', 'path': '../flusspferd core/flusspferd.html#executablename-class_property' },
'flusspferd.systemModuleDir': { 'name': 'flusspferd.systemModuleDir', 'type': 'class property', 'path': '../flusspferd core/flusspferd.html#systemmoduledir-class_property' },
'flusspferd.userModuleDir': { 'name': 'flusspferd.userModuleDir', 'type': 'class property', 'path': '../flusspferd core/flusspferd.html#usermoduledir-class_property' },
'fs_base': { 'name': 'fs_base', 'type': 'namespace', 'path': '../commonjs core/fs_base.html' },
'fs_base.openRaw': { 'name': 'fs_base.openRaw', 'type': 'class method', 'path': '../commonjs core/fs_base.html#openraw-class_method' },
'fs_base.canonial': { 'name': 'fs_base.canonial', 'type': 'class method', 'path': '../commonjs core/fs_base.html#canonial-class_method' },
'fs_base.move': { 'name': 'fs_base.move', 'type': 'class method', 'path': '../commonjs core/fs_base.html#move-class_method' },
'fs_base.remove': { 'name': 'fs_base.remove', 'type': 'class method', 'path': '../commonjs core/fs_base.html#remove-class_method' },
'fs_base.touch': { 'name': 'fs_base.touch', 'type': 'class method', 'path': '../commonjs core/fs_base.html#touch-class_method' },
'fs_base.makeDirectory': { 'name': 'fs_base.makeDirectory', 'type': 'class method', 'path': '../commonjs core/fs_base.html#makedirectory-class_method' },
'fs_base.removeDirectory': { 'name': 'fs_base.removeDirectory', 'type': 'class method', 'path': '../commonjs core/fs_base.html#removedirectory-class_method' },
'fs_base.workingDirectory': { 'name': 'fs_base.workingDirectory', 'type': 'class method', 'path': '../commonjs core/fs_base.html#workingdirectory-class_method' },
'fs_base.changeWorkingDirectory': { 'name': 'fs_base.changeWorkingDirectory', 'type': 'class method', 'path': '../commonjs core/fs_base.html#changeworkingdirectory-class_method' },
'fs_base.readLink': { 'name': 'fs_base.readLink', 'type': 'class method', 'path': '../commonjs core/fs_base.html#readlink-class_method' },
'fs_base.symbolicLink': { 'name': 'fs_base.symbolicLink', 'type': 'class method', 'path': '../commonjs core/fs_base.html#symboliclink-class_method' },
'fs_base.hardLink': { 'name': 'fs_base.hardLink', 'type': 'class method', 'path': '../commonjs core/fs_base.html#hardlink-class_method' },
'fs_base.exists': { 'name': 'fs_base.exists', 'type': 'class method', 'path': '../commonjs core/fs_base.html#exists-class_method' },
'fs_base.isFile': { 'name': 'fs_base.isFile', 'type': 'class method', 'path': '../commonjs core/fs_base.html#isfile-class_method' },
'fs_base.isDirectory': { 'name': 'fs_base.isDirectory', 'type': 'class method', 'path': '../commonjs core/fs_base.html#isdirectory-class_method' },
'fs_base.isLink': { 'name': 'fs_base.isLink', 'type': 'class method', 'path': '../commonjs core/fs_base.html#islink-class_method' },
'fs_base.isReadable': { 'name': 'fs_base.isReadable', 'type': 'class method', 'path': '../commonjs core/fs_base.html#isreadable-class_method' },
'fs_base.isWriteable': { 'name': 'fs_base.isWriteable', 'type': 'class method', 'path': '../commonjs core/fs_base.html#iswriteable-class_method' },
'fs_base.size': { 'name': 'fs_base.size', 'type': 'class method', 'path': '../commonjs core/fs_base.html#size-class_method' },
'fs_base.lastModified': { 'name': 'fs_base.lastModified', 'type': 'class method', 'path': '../commonjs core/fs_base.html#lastmodified-class_method' },
'fs_base.same': { 'name': 'fs_base.same', 'type': 'class method', 'path': '../commonjs core/fs_base.html#same-class_method' },
'fs_base.list': { 'name': 'fs_base.list', 'type': 'class method', 'path': '../commonjs core/fs_base.html#list-class_method' },
'io': { 'name': 'io', 'type': 'namespace', 'path': '../flusspferd core/io.html' },
'io.File': { 'name': 'io.File', 'type': 'class', 'path': '../flusspferd core/io/file.html' },
'new io.File': { 'name': 'new io.File', 'type': 'constructor', 'path': '../flusspferd core/io/file.html#new-constructor' },
'io.File#open': { 'name': 'io.File#open', 'type': 'instance method', 'path': '../flusspferd core/io/file.html#open-instance_method' },
'io.File#close': { 'name': 'io.File#close', 'type': 'instance method', 'path': '../flusspferd core/io/file.html#close-instance_method' },
'io.File.create': { 'name': 'io.File.create', 'type': 'class method', 'path': '../flusspferd core/io/file.html#create-class_method' },
'io.File.exists': { 'name': 'io.File.exists', 'type': 'class method', 'path': '../flusspferd core/io/file.html#exists-class_method' },
'io.Stream': { 'name': 'io.Stream', 'type': 'mixin', 'path': '../flusspferd core/io/stream.html' },
'io.Stream#readWhole': { 'name': 'io.Stream#readWhole', 'type': 'instance method', 'path': '../flusspferd core/io/stream.html#readwhole-instance_method' },
'io.Stream#readWholeBinary': { 'name': 'io.Stream#readWholeBinary', 'type': 'instance method', 'path': '../flusspferd core/io/stream.html#readwholebinary-instance_method' },
'io.Stream#read': { 'name': 'io.Stream#read', 'type': 'instance method', 'path': '../flusspferd core/io/stream.html#read-instance_method' },
'io.Stream#readBinary': { 'name': 'io.Stream#readBinary', 'type': 'instance method', 'path': '../flusspferd core/io/stream.html#readbinary-instance_method' },
'io.Stream#readLine': { 'name': 'io.Stream#readLine', 'type': 'instance method', 'path': '../flusspferd core/io/stream.html#readline-instance_method' },
'io.Stream#write': { 'name': 'io.Stream#write', 'type': 'instance method', 'path': '../flusspferd core/io/stream.html#write-instance_method' },
'io.Stream#print': { 'name': 'io.Stream#print', 'type': 'instance method', 'path': '../flusspferd core/io/stream.html#print-instance_method' },
'io.Stream#flush': { 'name': 'io.Stream#flush', 'type': 'instance method', 'path': '../flusspferd core/io/stream.html#flush-instance_method' },
'io.Stream#fieldSeparator': { 'name': 'io.Stream#fieldSeparator', 'type': 'instance property', 'path': '../flusspferd core/io/stream.html#fieldseparator-instance_property' },
'io.Stream#recordSeparator': { 'name': 'io.Stream#recordSeparator', 'type': 'instance property', 'path': '../flusspferd core/io/stream.html#recordseparator-instance_property' },
'io.Stream#autoFlush': { 'name': 'io.Stream#autoFlush', 'type': 'instance property', 'path': '../flusspferd core/io/stream.html#autoflush-instance_property' },
'io.BinaryStream': { 'name': 'io.BinaryStream', 'type': 'class', 'path': '../flusspferd core/io/binarystream.html' },
'new io.BinaryStream': { 'name': 'new io.BinaryStream', 'type': 'constructor', 'path': '../flusspferd core/io/binarystream.html#new-constructor' },
'io.BinaryStream#getBinary': { 'name': 'io.BinaryStream#getBinary', 'type': 'instance method', 'path': '../flusspferd core/io/binarystream.html#getbinary-instance_method' },
'sqlite3': { 'name': 'sqlite3', 'type': 'namespace', 'path': '../bundled modules/sqlite3.html' },
'sqlite3.SQLite3': { 'name': 'sqlite3.SQLite3', 'type': 'class', 'path': '../bundled modules/sqlite3/sqlite3.html' },
'new sqlite3.SQLite3': { 'name': 'new sqlite3.SQLite3', 'type': 'constructor', 'path': '../bundled modules/sqlite3/sqlite3.html#new-constructor' },
'sqlite3.SQLite3.versionStr': { 'name': 'sqlite3.SQLite3.versionStr', 'type': 'class property', 'path': '../bundled modules/sqlite3/sqlite3.html#versionstr-class_property' },
'sqlite3.SQLite3.version': { 'name': 'sqlite3.SQLite3.version', 'type': 'class property', 'path': '../bundled modules/sqlite3/sqlite3.html#version-class_property' },
'sqlite3.SQLite3#close': { 'name': 'sqlite3.SQLite3#close', 'type': 'instance method', 'path': '../bundled modules/sqlite3/sqlite3.html#close-instance_method' },
'sqlite3.SQLite3#lastInsertID': { 'name': 'sqlite3.SQLite3#lastInsertID', 'type': 'instance method', 'path': '../bundled modules/sqlite3/sqlite3.html#lastinsertid-instance_method' },
'sqlite3.SQLite3#exec': { 'name': 'sqlite3.SQLite3#exec', 'type': 'instance method', 'path': '../bundled modules/sqlite3/sqlite3.html#exec-instance_method' },
'sqlite3.SQLite3#execMany': { 'name': 'sqlite3.SQLite3#execMany', 'type': 'instance method', 'path': '../bundled modules/sqlite3/sqlite3.html#execmany-instance_method' },
'sqlite3.SQLite3#begin': { 'name': 'sqlite3.SQLite3#begin', 'type': 'instance method', 'path': '../bundled modules/sqlite3/sqlite3.html#begin-instance_method' },
'sqlite3.SQLite3#commit': { 'name': 'sqlite3.SQLite3#commit', 'type': 'instance method', 'path': '../bundled modules/sqlite3/sqlite3.html#commit-instance_method' },
'sqlite3.SQLite3#rollback': { 'name': 'sqlite3.SQLite3#rollback', 'type': 'instance method', 'path': '../bundled modules/sqlite3/sqlite3.html#rollback-instance_method' },
'sqlite3.SQLite3#query': { 'name': 'sqlite3.SQLite3#query', 'type': 'instance method', 'path': '../bundled modules/sqlite3/sqlite3.html#query-instance_method' },
'sqlite3.SQLite3.Cursor': { 'name': 'sqlite3.SQLite3.Cursor', 'type': 'class', 'path': '../bundled modules/sqlite3/sqlite3/cursor.html' },
'sqlite3.SQLite3.Cursor#bind': { 'name': 'sqlite3.SQLite3.Cursor#bind', 'type': 'instance method', 'path': '../bundled modules/sqlite3/sqlite3/cursor.html#bind-instance_method' },
'sqlite3.SQLite3.Cursor#next': { 'name': 'sqlite3.SQLite3.Cursor#next', 'type': 'instance method', 'path': '../bundled modules/sqlite3/sqlite3/cursor.html#next-instance_method' },
'sqlite3.SQLite3.Cursor#close': { 'name': 'sqlite3.SQLite3.Cursor#close', 'type': 'instance method', 'path': '../bundled modules/sqlite3/sqlite3/cursor.html#close-instance_method' },
'sqlite3.SQLite3.Cursor#reset': { 'name': 'sqlite3.SQLite3.Cursor#reset', 'type': 'instance method', 'path': '../bundled modules/sqlite3/sqlite3/cursor.html#reset-instance_method' },
'sqlite3.SQLite3.Cursor#__iterator__': { 'name': 'sqlite3.SQLite3.Cursor#__iterator__', 'type': 'instance method', 'path': '../bundled modules/sqlite3/sqlite3/cursor.html#__iterator__-instance_method' },
'cURL.Easy#options': { 'name': 'cURL.Easy#options', 'type': 'instance property', 'path': '../bundled modules/curl/easy.html#options-instance_property' },
'cURL': { 'name': 'cURL', 'type': 'namespace', 'path': '../bundled modules/curl.html' },
'cURL.version': { 'name': 'cURL.version', 'type': 'class property', 'path': '../bundled modules/curl.html#version-class_property' },
'cURL.Easy': { 'name': 'cURL.Easy', 'type': 'class', 'path': '../bundled modules/curl/easy.html' },
'new cURL.Easy': { 'name': 'new cURL.Easy', 'type': 'constructor', 'path': '../bundled modules/curl/easy.html#new-constructor' },
'cURL.Easy#cleanup': { 'name': 'cURL.Easy#cleanup', 'type': 'instance method', 'path': '../bundled modules/curl/easy.html#cleanup-instance_method' },
'cURL.Easy#perform': { 'name': 'cURL.Easy#perform', 'type': 'instance method', 'path': '../bundled modules/curl/easy.html#perform-instance_method' },
'cURL.Easy#reset': { 'name': 'cURL.Easy#reset', 'type': 'instance method', 'path': '../bundled modules/curl/easy.html#reset-instance_method' },
'cURL.Easy#escape': { 'name': 'cURL.Easy#escape', 'type': 'instance method', 'path': '../bundled modules/curl/easy.html#escape-instance_method' },
'cURL.Easy#unescape': { 'name': 'cURL.Easy#unescape', 'type': 'instance method', 'path': '../bundled modules/curl/easy.html#unescape-instance_method' },
'cURL.Easy#valid': { 'name': 'cURL.Easy#valid', 'type': 'instance method', 'path': '../bundled modules/curl/easy.html#valid-instance_method' },
'subprocess': { 'name': 'subprocess', 'type': 'namespace', 'path': '../flusspferd core/subprocess.html' },
'subprocess.SIGKILL': { 'name': 'subprocess.SIGKILL', 'type': 'class property', 'path': '../flusspferd core/subprocess.html#sigkill-class_property' },
'subprocess.SIGTERM': { 'name': 'subprocess.SIGTERM', 'type': 'class property', 'path': '../flusspferd core/subprocess.html#sigterm-class_property' },
'subprocess.popen': { 'name': 'subprocess.popen', 'type': 'class method', 'path': '../flusspferd core/subprocess.html#popen-class_method' },
'subprocess.Subprocess': { 'name': 'subprocess.Subprocess', 'type': 'class', 'path': '../flusspferd core/subprocess/subprocess.html' },
'subprocess.Subprocess#poll': { 'name': 'subprocess.Subprocess#poll', 'type': 'instance method', 'path': '../flusspferd core/subprocess/subprocess.html#poll-instance_method' },
'subprocess.Subprocess#wait': { 'name': 'subprocess.Subprocess#wait', 'type': 'instance method', 'path': '../flusspferd core/subprocess/subprocess.html#wait-instance_method' },
'subprocess.Subprocess#communicate': { 'name': 'subprocess.Subprocess#communicate', 'type': 'instance method', 'path': '../flusspferd core/subprocess/subprocess.html#communicate-instance_method' },
'subprocess.Subprocess#sendSignal': { 'name': 'subprocess.Subprocess#sendSignal', 'type': 'instance method', 'path': '../flusspferd core/subprocess/subprocess.html#sendsignal-instance_method' },
'subprocess.Subprocess#terminate': { 'name': 'subprocess.Subprocess#terminate', 'type': 'instance method', 'path': '../flusspferd core/subprocess/subprocess.html#terminate-instance_method' },
'subprocess.Subprocess#kill': { 'name': 'subprocess.Subprocess#kill', 'type': 'instance method', 'path': '../flusspferd core/subprocess/subprocess.html#kill-instance_method' },
'subprocess.Subprocess#pid': { 'name': 'subprocess.Subprocess#pid', 'type': 'instance property', 'path': '../flusspferd core/subprocess/subprocess.html#pid-instance_property' },
'subprocess.Subprocess#returncode': { 'name': 'subprocess.Subprocess#returncode', 'type': 'instance property', 'path': '../flusspferd core/subprocess/subprocess.html#returncode-instance_property' },
'subprocess.Subprocess#stdin': { 'name': 'subprocess.Subprocess#stdin', 'type': 'instance property', 'path': '../flusspferd core/subprocess/subprocess.html#stdin-instance_property' },
'subprocess.Subprocess#stdout': { 'name': 'subprocess.Subprocess#stdout', 'type': 'instance property', 'path': '../flusspferd core/subprocess/subprocess.html#stdout-instance_property' },
'subprocess.Subprocess#stderr': { 'name': 'subprocess.Subprocess#stderr', 'type': 'instance property', 'path': '../flusspferd core/subprocess/subprocess.html#stderr-instance_property' },
'xml': { 'name': 'xml', 'type': 'namespace', 'path': '../bundled modules/xml.html' },
'xml.domImplementation': { 'name': 'xml.domImplementation', 'type': 'class property', 'path': '../bundled modules/xml.html#domimplementation-class_property' },
'xml.XMLParser': { 'name': 'xml.XMLParser', 'type': 'class', 'path': '../bundled modules/xml/xmlparser.html' },
'xml.HTMLParser': { 'name': 'xml.HTMLParser', 'type': 'class', 'path': '../bundled modules/xml/htmlparser.html' },
'xml.HTMLParser.parse': { 'name': 'xml.HTMLParser.parse', 'type': 'class method', 'path': '../bundled modules/xml/htmlparser.html#parse-class_method' },
'xml.HTMLParser.parseString': { 'name': 'xml.HTMLParser.parseString', 'type': 'class method', 'path': '../bundled modules/xml/htmlparser.html#parsestring-class_method' },
'xml.XMLParser.parse': { 'name': 'xml.XMLParser.parse', 'type': 'class method', 'path': '../bundled modules/xml/xmlparser.html#parse-class_method' },
'xml.XMLParser.parseString': { 'name': 'xml.XMLParser.parseString', 'type': 'class method', 'path': '../bundled modules/xml/xmlparser.html#parsestring-class_method' },
'xml.DOMImplementation': { 'name': 'xml.DOMImplementation', 'type': 'class', 'path': '../bundled modules/xml/domimplementation.html' },
'xml.DOMImplementation#hasFeature': { 'name': 'xml.DOMImplementation#hasFeature', 'type': 'instance method', 'path': '../bundled modules/xml/domimplementation.html#hasfeature-instance_method' },
'xml.DOMImplementation#createDocument': { 'name': 'xml.DOMImplementation#createDocument', 'type': 'instance method', 'path': '../bundled modules/xml/domimplementation.html#createdocument-instance_method' },
'xml.DOMImplementation#createDocumentType': { 'name': 'xml.DOMImplementation#createDocumentType', 'type': 'instance method', 'path': '../bundled modules/xml/domimplementation.html#createdocumenttype-instance_method' },
'gmp': { 'name': 'gmp', 'type': 'namespace', 'path': '../bundled modules/gmp.html' },
'gmp.Base': { 'name': 'gmp.Base', 'type': 'mixin', 'path': '../bundled modules/gmp/base.html' },
'gmp.Base#toDouble': { 'name': 'gmp.Base#toDouble', 'type': 'instance method', 'path': '../bundled modules/gmp/base.html#todouble-instance_method' },
'gmp.Base#toString': { 'name': 'gmp.Base#toString', 'type': 'instance method', 'path': '../bundled modules/gmp/base.html#tostring-instance_method' },
'gmp.Base#sgn': { 'name': 'gmp.Base#sgn', 'type': 'instance method', 'path': '../bundled modules/gmp/base.html#sgn-instance_method' },
'gmp.Base#abs': { 'name': 'gmp.Base#abs', 'type': 'instance method', 'path': '../bundled modules/gmp/base.html#abs-instance_method' },
'gmp.Base#cmp': { 'name': 'gmp.Base#cmp', 'type': 'instance method', 'path': '../bundled modules/gmp/base.html#cmp-instance_method' },
'gmp.Base#add': { 'name': 'gmp.Base#add', 'type': 'instance method', 'path': '../bundled modules/gmp/base.html#add-instance_method' },
'gmp.Base#sub': { 'name': 'gmp.Base#sub', 'type': 'instance method', 'path': '../bundled modules/gmp/base.html#sub-instance_method' },
'gmp.Base#mul': { 'name': 'gmp.Base#mul', 'type': 'instance method', 'path': '../bundled modules/gmp/base.html#mul-instance_method' },
'gmp.Base#div': { 'name': 'gmp.Base#div', 'type': 'instance method', 'path': '../bundled modules/gmp/base.html#div-instance_method' },
'gmp.Integer': { 'name': 'gmp.Integer', 'type': 'class', 'path': '../bundled modules/gmp/integer.html' },
'new gmp.Integer': { 'name': 'new gmp.Integer', 'type': 'constructor', 'path': '../bundled modules/gmp/integer.html#new-constructor' },
'gmp.Integer#sqrt': { 'name': 'gmp.Integer#sqrt', 'type': 'instance method', 'path': '../bundled modules/gmp/integer.html#sqrt-instance_method' },
'gmp.Integer#fitsInt': { 'name': 'gmp.Integer#fitsInt', 'type': 'instance method', 'path': '../bundled modules/gmp/integer.html#fitsint-instance_method' },
'gmp.Integer#toInt': { 'name': 'gmp.Integer#toInt', 'type': 'instance method', 'path': '../bundled modules/gmp/integer.html#toint-instance_method' },
'gmp.Rational': { 'name': 'gmp.Rational', 'type': 'class', 'path': '../bundled modules/gmp/rational.html' },
'new gmp.Rational': { 'name': 'new gmp.Rational', 'type': 'constructor', 'path': '../bundled modules/gmp/rational.html#new-constructor' },
'gmp.Rational#canonicalize': { 'name': 'gmp.Rational#canonicalize', 'type': 'instance method', 'path': '../bundled modules/gmp/rational.html#canonicalize-instance_method' },
'gmp.Rational#numerator': { 'name': 'gmp.Rational#numerator', 'type': 'instance property', 'path': '../bundled modules/gmp/rational.html#numerator-instance_property' },
'gmp.Rational#denominator': { 'name': 'gmp.Rational#denominator', 'type': 'instance property', 'path': '../bundled modules/gmp/rational.html#denominator-instance_property' },
'gmp.Float': { 'name': 'gmp.Float', 'type': 'class', 'path': '../bundled modules/gmp/float.html' },
'new gmp.Float': { 'name': 'new gmp.Float', 'type': 'constructor', 'path': '../bundled modules/gmp/float.html#new-constructor' },
'gmp.Float#fitsInt': { 'name': 'gmp.Float#fitsInt', 'type': 'instance method', 'path': '../bundled modules/gmp/float.html#fitsint-instance_method' },
'gmp.Float#toInt': { 'name': 'gmp.Float#toInt', 'type': 'instance method', 'path': '../bundled modules/gmp/float.html#toint-instance_method' },
'gmp.Float#precision': { 'name': 'gmp.Float#precision', 'type': 'instance property', 'path': '../bundled modules/gmp/float.html#precision-instance_property' },
'gmp.Float#sqrt': { 'name': 'gmp.Float#sqrt', 'type': 'instance method', 'path': '../bundled modules/gmp/float.html#sqrt-instance_method' },
'gmp.Float#ceil': { 'name': 'gmp.Float#ceil', 'type': 'instance method', 'path': '../bundled modules/gmp/float.html#ceil-instance_method' },
'gmp.Float#floor': { 'name': 'gmp.Float#floor', 'type': 'instance method', 'path': '../bundled modules/gmp/float.html#floor-instance_method' },
'gmp.Float#trunc': { 'name': 'gmp.Float#trunc', 'type': 'instance method', 'path': '../bundled modules/gmp/float.html#trunc-instance_method' },
'gmp.Float#getString': { 'name': 'gmp.Float#getString', 'type': 'instance method', 'path': '../bundled modules/gmp/float.html#getstring-instance_method' },
'util': { 'name': 'util', 'type': 'namespace', 'path': '../flusspferd core/util.html' },
'util.Range': { 'name': 'util.Range', 'type': 'class method', 'path': '../flusspferd core/util.html#range-class_method' },
'util.load': { 'name': 'util.load', 'type': 'class method', 'path': '../flusspferd core/util.html#load-class_method' },
'Function.bind': { 'name': 'Function.bind', 'type': 'class method', 'path': '../language/function.html#bind-class_method' }
};